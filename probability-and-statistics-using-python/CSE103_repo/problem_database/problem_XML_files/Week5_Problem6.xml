<problem>
  <text>
    <script type="loncapa/python">

# variable names and values
# if multiple variables, the number of values to test should be the same
variable_values = {'p':[0.1, 0.2, 0.3]}

# value index used to extract hint
index_of_test_value = 2

solution1 = "p(1-p)"
solution2 = "(1 + 2 + 3 + 4)/4"
solution3 = "(1+4+9+16)/4"
solution4 = "1.25"
solution5 = "(2.25 + 0.25 + 0.25 + 2.25)/4"

solutions = [solution1, solution2, solution3, solution4, solution5]
# hint text id
hint_text_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
      //fill in number of hint
        var hint_number = 2;

      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];

      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
               
      //fill in hint text id. Need to match the hint_text_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<h3>Examples of Variances</h3><ul><li>Suppose you toss a coin with bias \(p\), and let \(X\) be \(1\) if the outcome is heads, or\(0\) if the outcome is tails.</li></ul><p>Let's look at the distribution of \(X\) and of \(X^2\).</p><table border="1">  <tr>    <th>Prob</th>    <th>\(X\)</th>    <th>\(X^2\)</th>  </tr>  <tr>    <td>\(p\)</td>    <td>1</td>    <td>1</td>  </tr>  <tr>    <td>1-\(p\)</td>    <td>0</td>    <td>0</td>  </tr></table><p>From this table, \(\mathbb{E}(X) = p\) and \(\mathbb{E}(X^2) = p\). Thus the variance is\(\mbox{var}(X) = \mathbb{E}(X^2) - (\mathbb{E}(X))^2 = \)</p>

    <customresponse cfn="check" expect="\[$solution1\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<ul><li>Roll a 4-sided die (a tetrahedron) in which each face is equally likely to come up, and let the outcome be \(X \in \{1,2,3,4\}\).</li></ul><p>We have two formulas for the variance:\[ \mbox{var}(X) = \mathbb{E} \left( (X - \mu)^2 \right) \]\[ \mbox{var}(X) = \mathbb{E}(X^2) - \mu^2 \]where \(\mu = \mathbb{E}(X)\).</p><p>Let's try both and make sure we get the same answer.</p><p>First of all, \(\mu = \mathbb{E}(X) =\)</p>

    <customresponse cfn="check" expect="\[$solution2\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Now, let's tabulate the distribution of \(X^2\) and \((X-\mu)^2\).</p><table border="1">  <colgroup align="center"/>  <colgroup align="left"/>  <tr>    <th>Prob</th>    <th>\(X\)</th>    <th>\(X^2\)</th>    <th>\((X-\mu)^2\)</th>  </tr>  <tr>    <td>\(\frac{1}{4}\) </td>    <td>1</td>    <td>1</td>    <td>2.25</td>  </tr>  <tr>    <td>\(\frac{1}{4}\)</td>    <td>2</td>    <td>4</td>    <td>0.25</td>  </tr>  <tr>    <td>\(\frac{1}{4}\)</td>    <td>3</td>    <td>9</td>    <td>0.25</td>  </tr>  <tr>    <td>\(\frac{1}{4}\)</td>    <td>4</td>    <td>16</td>    <td>2.25</td>  </tr></table><p>Reading from this table, \(\mathbb{E}(X^2) = \)</p>

    <customresponse cfn="check" expect="\[$solution3\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Using the second formula for variance we have</p><p>\(\mbox{var}(X) = \mathbb{E}(X^2) - \mu^2 = \)</p>

    <customresponse cfn="check" expect="\[$solution4\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>\(\mathbb{E}\left((X-\mu)^2\right) = \)</p>

    <customresponse cfn="check" expect="\[$solution5\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Using the first formula for variance we have \(\mbox{var}(X) = \mathbb{E}\left((X-\mu)^2\right)\). Notice that both formulae give the same answer.</p>
    
    

    

    <script type="loncapa/python">
from hint import evaluate
from hint.get_hint import get_hint

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate(expect, ans)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return
  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  hint = get_hint(solutions[i], ans, hint_text_id, i)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript" src="/static/js/adaptive_hint.js"></script>
    <script type="text/javascript">                             
      for (var i=0; i != hint_number; i++) {
        hide_hint(i);
      }
      show_hint(hint_number);
    </script>

  </text>
</problem>