<problem>
  <text>
    <script type="loncapa/python">

k = random.randrange(6,10,1);
t1 = random.randrange(2,5,1);
t2 = random.randrange(2,5,1);
r = random.randrange(1,6,1)/10; #random(0.1,0.6,0.1);

solution1 = "{0}*({0}+1)/(2*{0})".format(k);
solution2 = "2*{0}/({0}+1) + ({0}*({0}-1))/(2*({0}+1))".format(k);
solution3 = "{0}*{2} + {1}*({3})".format(t1,t2,solution1,solution2);
solution4 = "({0})/{1}".format(solution3,r);

solutions = [solution1, solution2, solution3, solution4]
# hint text id
hint_text_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
      //fill in number of hint
        var hint_number = 2;

      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];

      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
               
      //fill in hint text id. Need to match the hint_text_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<h3>Rigged dice</h3><p>We have 2 $k-sided dice. The first die is a normal fair die where each face has a probability of showing of \(1/$k\). However, the second die is rigged so that the probability of showing the largest face $k is twice as high as of the other faces and all of the other faces have equal probabilities.</p><p>(1) What is the expected value of the outcome from tossing the fair die?</p>

    <customresponse cfn="check" expect="\[$solution1\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>(2) What is the expected value of the outcome from tossing the rigged die?</p>

    <customresponse cfn="check" expect="\[$solution2\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>We throw the fair die $t1 times, then the rigged die $t2 times consecutively and sum up all the outcomes:</p><p>(3) What is the expected value of the sum?</p>

    <customresponse cfn="check" expect="\[$solution3\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Let \(Y\) denote the sum from the previous part. If we know that</p><p>\[P(Y &gt; k) \le $r\]</p><p>(4) According to Markov's inequality, what is \(k\)?</p>

    <customresponse cfn="check" expect="\[$solution4\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>



    
    

    

    <script type="loncapa/python">
from hint import evaluate
from hint.get_hint import get_hint

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate(expect, ans)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return
  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  hint = get_hint(solutions[i], ans, hint_text_id, i)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript" src="/static/js/adaptive_hint.js"></script>
    <script type="text/javascript">                             
      for (var i=0; i != hint_number; i++) {
        hide_hint(i);
      }
      show_hint(hint_number);
    </script>

  </text>
</problem>