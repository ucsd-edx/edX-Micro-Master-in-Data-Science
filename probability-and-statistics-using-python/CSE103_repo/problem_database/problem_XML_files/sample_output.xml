<problem>
  <text>
    <script type="loncapa/python">

# random variables (no need to import random library)
n = random.randrange(3,6,1)
k = random.randrange(1,6,2)

# Solutions with variables converted to string
# Make sure you name the solution with part id at the end. e.g. 'solution1' will be solution for part 1. 
solution1 = "(26^{0})-(25^{0})+{1}".format(n,k)
solution2 = "8"
solution3 = "35*{0}".format(k)

# Group all solutions into a list
solutions = [solution1, solution2, solution3]


# hint id
hint_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
        var hint_number = 2;
      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];
      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
      //fill in hint text id. Need to match the hint_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<ul><li>How many strings of length $n consisting of lower case English letters, and including at least one "x", are there?</li></ul>

    <customresponse cfn="check" expect="\[$solution1\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<ul><li>Another part, the answer is?</li></ul>

    <customresponse cfn="check" expect="\[$solution2\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<hr /><ul><li>Part 3, fill in your answer here.</li></ul>

    <customresponse cfn="check" expect="\[$solution3\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>



    
    

    <script type="loncapa/python">
from hint import evaluate
from hint import cluster_functions
from hint import universal_hints as u_hint
from hint import conditional_hints as c_hint

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate(expect, ans)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return

  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  param = cluster_functions.make_params(solutions[i], ans)
  if param == {}:
    return
  hint = u_hint.universal_hint(param)
  if hint:
    hint = "&lt;font color='grey'&gt;Hint: {0}&lt;/font&gt;".format(hint)
  else:
    hint_text, hint_answer = c_hint.conditional_hint(param)
    if not hint_text:
      return
    hint_answer_id = hint_id[i] + "answer"
    hint = "&lt;button onclick='show_hint({0})'&gt;Show hint&lt;/button&gt;".format(i)
    hint += "&lt;p id='{0}' style='display:none'&gt; {1} &lt;/p&gt;".format(hint_id[i], hint_text)
    hint += "&lt;p id='{0}' style='display:none'&gt; {1} &lt;/p&gt;".format(hint_answer_id, hint_answer)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript">
        function hide_hint() {
            var index = arguments[0];
            var hintInputId = hintIds[index];
            var proId = proIds[index];
            var hintId = hintInputId.replace('input', 'problem');
            hintId = hintId.slice(0, -4);
            var hintEle = document.getElementById(hintId)
            if (!hintEle) {
              return;
            }
            var hintInputEle = document.getElementById(hintInputId)
            if (!hintInputEle) {
              return;
            }
            var hintStatusId = hintInputId.replace('input', 'status');
            var hintStatusEle = document.getElementById(hintStatusId);
            if (!hintStatusEle) {
              return;
            }
            hintEle.style.display = "none";
            hintInputEle.value = "";
            hintStatusEle.className = "incorrect";
        }
                 
        function show_hint() {
            var index = arguments[0];
            var hintInputId = hintIds[index];
            var hintId = hintInputId.replace('input', 'problem');
            hintId = hintId.slice(0, -4);
            var hintTextId = hintTextIds[index];
            var hintAnswerId = hintTextId + "answer";
            var hintStatusId = hintInputId.replace('input', 'status');
            var proInputId = proIds[index];
            var proId = proInputId.replace('input', 'status');
            //var prohintId = proInputId.replace('input', 'inputtype');
            
            var hintInputEle = document.getElementById(hintInputId);
            if (!hintInputEle) {
                 return;
            }
            var hintEle = document.getElementById(hintId);
            if (!hintEle) {
                 return;
            }
            var hintAnswerEle = document.getElementById(hintAnswerId);
            if (!hintAnswerEle) {
                 return;
            }
            var hintStatusEle = document.getElementById(hintStatusId);
            if (!hintInputEle) {
                 return;
            }
            var proInputBox = document.getElementById(proInputId);
            if (!proInputBox) {
                 return;
            }
            var proEle = document.getElementById(proId);
            if (!proEle) {
                 return;
            }
                 
            if (proEle.classList.contains("incorrect")) {
              if (proInputBox.value != "") {
                if (document.getElementById(hintTextId)) {
                  var hintText = document.getElementById(hintTextId).innerHTML;
                  document.getElementById(hintId).style.display = "";
                  document.getElementById(hintId).getElementsByTagName('p')[0].innerHTML = hintText;
                  var inputValue = document.getElementById(hintInputId).value;
                  var answerValue = document.getElementById(hintAnswerId).innerHTML;
                  answerValue = answerValue.substring(1);
                  answerValue = answerValue.slice(0,-1);
                  if (inputValue == answerValue) {
                    document.getElementById(hintStatusId).className = "correct";
                  } else {
                    document.getElementById(hintStatusId).className = "incorrect";
                  }
                }
              }
            }
        }
          
        for (var i=0; i != hint_number; i++) {
            hide_hint(i);
        }
    </script>

  </text>
</problem>