<problem>
  <text>
    <script type="loncapa/python">
#### Written by Yoav Freund 11/3/2016

# Solutions with variables converted to string
# Make sure you name the solution with part id at the end. e.g. 'solution1' will be solution for part 1. 

import numpy as np

X_vals=np.array([1,2,3])
Y_vals=np.array([1,2,3])

# this imd can generate a number of different problems, each for a different matrix
# the matrices are specified here:

matrices={'dep_corr1':np.array([[1./3,0,0],[0,1./3,0],[0,0,1./3]]),
          'indep_uncor': np.array([[.1,0,.4],[0,0,0],[.1,0,.4]]),
          'dep_uncor': np.array([[.2,0,.2],[0,.2,0],[.2,0,.2]]),
          'dep_anticorr':np.array([[0,0,1./3],[0,1./3,0],[1./3,0,0]]),
          'dep_uncor1': np.array([[.2,0,.2],[0,.2,0],[.2,0,.2]]),
          'dep_uncor2': np.array([[.25,0,0],[0,0,.5],[.25,0,0]]),
          'asym': np.array([[.2,0,0],[0,0,.5],[.3,0,0]])
          }

matrices_str = {
'dep_corr1':np.array([["1/3","0","0"],["0","1/3","0"],["0","0","1/3"]]),
'indep_uncor': np.array([["0.1","0","0.4"],["0","0","0"],["0.1","0","0.4"]]),
'dep_uncor': np.array([["0.2","0","0.2"],["0","0.2","0"],["0.2","0","0.2"]]),
'dep_anticorr':np.array([["0","0","1/3"],["0","1/3","0"],["1/3","0","0"]]),
'dep_uncor1': np.array([["0.2","0","0.2"],["0","0.2","0"],["0.2","0","0.2"]]),
'dep_uncor2': np.array([["0.25","0","0"],["0","0","0.5"],["0.25","0","0"]]),
'asym': np.array([["0.2","0","0"],["0","0","0.5"],["0.3","0","0"]])
        }

joint=matrices['dep_uncor2']
joint_str = matrices_str['dep_uncor2']

joint00 = joint_str[0,0]
joint01 = joint_str[0,1]
joint02 = joint_str[0,2]
joint10 = joint_str[1,0]
joint11 = joint_str[1,1]
joint12 = joint_str[1,2]
joint20 = joint_str[2,0]
joint21 = joint_str[2,1]
joint22 = joint_str[2,2]


marginal_X = np.sum(joint,axis=0)
marginal_Y = np.sum(joint,axis=1)

mean_X=np.dot(marginal_X,X_vals)
mean_Y=np.dot(marginal_Y,Y_vals)

X_Nvals=X_vals-mean_X
Y_Nvals=Y_vals-mean_Y

var_X=np.dot(marginal_X,X_Nvals**2)
var_Y=np.dot(marginal_Y,Y_Nvals**2)

xy=np.outer(Y_vals,X_vals)
Nxy=np.outer(Y_Nvals,X_Nvals)

Cov = np.sum(np.multiply(Nxy,joint))
Exy = np.sum(np.multiply(xy,joint))

#print Exy, Cov, Cov/np.sqrt(var_X*var_Y)
independent = 0.01 > np.sum((np.outer(marginal_Y,marginal_X)-joint)**2)

# Dist of X
solution1="+".join(joint_str[:,0])
solution2="+".join(joint_str[:,1])
solution3="+".join(joint_str[:,2])
marginal_X_str = [solution1, solution2, solution3]
solution4="+".join(["((%s) * (%.2f))"%(marginal_X_str[i],X_vals[i]) for i in range(len(X_vals))])
solution5="+".join(["((%s) * ((%.2f)^2))"%(marginal_X_str[i],X_Nvals[i]) for i in range(len(X_vals))])

# Dist of Y
solution6="+".join(joint_str[0,:])
solution7="+".join(joint_str[1,:])
solution8="+".join(joint_str[2,:])
marginal_Y_str = [solution6, solution7, solution8]
solution9="+".join(["((%s) * (%.2f))"%(marginal_Y_str[i],Y_vals[i]) for i in range(len(Y_vals))])
solution10="+".join(["((%s) * ((%.2f)^2))"%(marginal_Y_str[i],Y_Nvals[i]) for i in range(len(Y_vals))])

#Interactions between X and Y
flat_xy=xy.flatten()
flat_joint=joint_str.flatten()
solution11="+".join(["((%s) * (%.2f))"%(flat_joint[i],flat_xy[i]) for i in range(len(flat_xy))])
solution12="{0}-({1}*{2})".format(Exy,mean_X,mean_Y)
solution13="{0}/sqrt({1}*{2})".format(Cov,var_X,var_Y)
solution14=str(1*independent)
solutions=[solution1,solution2,solution3,solution4,solution5,solution6,solution7,solution8,
           solution9,solution10,solution11,solution12,solution13,solution14]
#print k, dic_key
#print 'joint=\n',joint
#print 'np.outer(marginal_Y,marginal_X)=\n',np.outer(marginal_Y,marginal_X)
#print 'mean_X,Mean_Y = ',mean_X,mean_Y
#print 'X_Nvals=',X_Nvals
#print 'Y_Nvals=',Y_Nvals
#print 'Nxy=\n',Nxy
#print 'Cov=',Cov
#print '\n'.join(solutions)

# hint text id
hint_text_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
      //fill in number of hint
        var hint_number = 2;

      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];

      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
               
      //fill in hint text id. Need to match the hint_text_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<h3>Covariance Calculations</h3>
<p>Suppose X,Y are discrete random variables whose joint distribution is</p>
<table align="center" border="1" cellpadding="1" cellspacing="1" style="width:500px">
    <caption>Joint probabilities</caption>
    <thead>
        <tr>
            <th scope="row"></th>
            <th scope="col" style="text-align: center; vertical-align: bottom;">x=1</th>
            <th scope="col" style="text-align: center; vertical-align: bottom;">x=2</th>
            <th scope="col" style="text-align: center; vertical-align: bottom;">x=3</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th scope="row" style="text-align:center; vertical-align:bottom">y=1</th>
            <td style="text-align:center; vertical-align:bottom">$joint00</td>
            <td style="text-align:center; vertical-align:bottom">$joint01</td>
            <td style="text-align:center; vertical-align:bottom">$joint02</td>
        </tr>
        <tr>
            <th scope="row" style="text-align:center; vertical-align:bottom">y=2</th>
            <td style="text-align:center; vertical-align:bottom">$joint10</td>
            <td style="text-align:center; vertical-align:bottom">$joint11</td>
            <td style="text-align:center; vertical-align:bottom">$joint12</td>
        </tr>
        <tr>
            <th scope="row" style="text-align:center; vertical-align:bottom">y=3</th>
            <td style="text-align:center; vertical-align:bottom">$joint20</td>
            <td style="text-align:center; vertical-align:bottom">$joint21</td>
            <td style="text-align:center; vertical-align:bottom">$joint22</td>
        </tr>
    </tbody>
</table>

<h3>(1) What is the distribution over \(X\)?</h3>
<p>\(P(X=1)=\)</p>


    <customresponse cfn="check" expect="\[$solution1\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>\(P(X=2)=\)</p>


    <customresponse cfn="check" expect="\[$solution2\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>\(P(X=3)=\)</p>


    <customresponse cfn="check" expect="\[$solution3\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>What is \(E(X)\) ?</p>


    <customresponse cfn="check" expect="\[$solution4\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>What is \(Var(X)\) ?</p>


    <customresponse cfn="check" expect="\[$solution5\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<h3>(2) What is the distribution over \(Y\)?</h3>
<p>\(P(Y=1)=\)</p>


    <customresponse cfn="check" expect="\[$solution6\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>\(P(Y=2)=\)</p>


    <customresponse cfn="check" expect="\[$solution7\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>\(P(Y=3)=\)</p>


    <customresponse cfn="check" expect="\[$solution8\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>What is \(E(Y)\) ?</p>


    <customresponse cfn="check" expect="\[$solution9\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>What is \(Var(Y)\) ?</p>


    <customresponse cfn="check" expect="\[$solution10\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<h3>(3) What is the relationship between \(X\) and \(Y\) ?</h3>
<p>What is \(E(XY)\) ?</p>


    <customresponse cfn="check" expect="\[$solution11\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>What is \(Cov(X,Y)\) ?</p>


    <customresponse cfn="check" expect="\[$solution12\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>What is \(Corr(X,Y)\) ?</p>


    <customresponse cfn="check" expect="\[$solution13\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Are \(X\) and \(Y\) independent (1=independent, 0=dependent)?</p>


    <customresponse cfn="check" expect="\[$solution14\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


    

    

    <script type="loncapa/python">
from hint import evaluate
from hint.get_hint import get_hint

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate(expect, ans)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return
  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  hint = get_hint(solutions[i], ans, hint_text_id, i)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript" src="/static/js/adaptive_hint.js"></script>
    <script type="text/javascript">                             
      for (var i=0; i != hint_number; i++) {
        hide_hint(i);
      }
      show_hint(hint_number);
    </script>

  </text>
</problem>