<problem>
  <text>
    <script type="loncapa/python">

# random variables (no need to import random library)

n = random.randrange(5,10,1)
m = n + 4

# Solutions with variables converted to string
# Make sure you name the solution with part id at the end. e.g. 'solution1' will be solution for part 1.
solution1 = "1/{0}".format(n)
solution2 = "({0}-1)/({0}^2)".format(n)
solution3 = "(({0} - 1) / {0})^{{{1}}}".format(n, m)
solution4 = "({1}/{0})*(({0}-1)/{0})^{{({1}-1)}}".format(n, m)
solution5 = "{1}/{0}".format(n, m)
solution6 = "{1}*({0}-1)/({0}^2)".format(n, m)

# Group all solutions into a list
solutions = [solution1, solution2, solution3, solution4, solution5, solution6]



# hint text id
hint_text_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
      //fill in number of hint
        var hint_number = 2;

      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];

      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
               
      //fill in hint text id. Need to match the hint_text_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<p>Suppose you throw \( m= $m \) balls into \( n= $n \) bins.</p>
<p>Let \( X_i \) be the number of balls that fall into bin \( i \).</p>
<p>Let \( T_{i,j} \) Be a random variable that is 1 if the \( j \)'th ball falls in the \( i \)'th bin.</p>
<p>Clearly \( T_{i,j},T_{i,k} \) are independent for \( 1 \leq j &lt; k \leq m \), and \( X_i = \sum_{j=1}^{m} T_{i,j} \).</p>
<p>Using these facts, answer the following questions:</p>
<p>(1) What is \( \mathbb{E}(T_{i,j}) \)?</p>


    <customresponse cfn="check" expect="\[$solution1\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>(2) What is \( var(T_{i,j}) \)?</p>


    <customresponse cfn="check" expect="\[$solution2\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>(3) What is \( Pr(X_i=0) \) (i.e. there are no balls in bin \( i \)) ?</p>


    <customresponse cfn="check" expect="\[$solution3\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>(4) What is \( Pr(X_i = 1) \) (i.e. there is exactly one ball in bin \( i \)) ?</p>


    <customresponse cfn="check" expect="\[$solution4\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>(5) What is \( \mathbb{E}(X_i) \)? (Recall linearity of expectations:\( E(\sum_{i=1}^n T_{i,j})=\sum_{i=1}^n E(T_{i,j}) \) )</p>


    <customresponse cfn="check" expect="\[$solution5\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>(6) What is \( var(X_i) \)? (Recall the variance of the sum of <em>independent</em> random variables is equal to the sum of the variances.)</p>


    <customresponse cfn="check" expect="\[$solution6\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


    

    

    <script type="loncapa/python">
from hint import evaluate
from hint.get_hint import get_hint

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate(expect, ans)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return
  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  hint = get_hint(solutions[i], ans, hint_text_id, i)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript" src="/static/js/adaptive_hint.js"></script>
    <script type="text/javascript">                             
      for (var i=0; i != hint_number; i++) {
        hide_hint(i);
      }
      show_hint(hint_number);
    </script>

  </text>
</problem>