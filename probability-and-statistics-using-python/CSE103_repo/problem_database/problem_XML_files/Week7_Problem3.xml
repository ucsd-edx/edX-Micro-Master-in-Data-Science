<problem>
  <text>
    <script type="loncapa/python">

# variable names and values
# if multiple variables, the number of values to test should be the same
variable_values = {'p':[0.1,0.2,0.3]}

F1 = "1/36"
F2 = "2/36"
F3 = "3/36"
F4 = "4/36"
F5 = "5/36"
F6 = "6/36"

# random variables
r = random.randrange(3,6,1)

# Solutions with variables converted to string
# Make sure you name the solution with part id at the end. e.g. 'solution1' will be solution for part 1.
solution1 = "p"
solution2 = "p(1-p)"
solution3 = "(1+2+3+4+5+6)/6"
solution4 = "((1-3.5)^2 + (2-3.5)^2 + (3-3.5)^2 + (4-3.5)^2 + (5-3.5)^2 + (6-3.5)^2)/6"
solution5 = "2*({0})".format(solution3)
solution6 = "2*({0})".format(solution4)

# Group all solutions into a list
solutions = [solution1, solution2, solution3, solution4, solution5, solution6]
# hint id
hint_text_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
      //fill in number of hint
        var hint_number = 2;

      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];

      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
               
      //fill in hint text id. Need to match the hint_text_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<p>Suppose the random variable \(X\) attains a finite set of values \(A\), the <em>mean</em>, or <em>expected value</em>, is</p><p>\[ \mathbb{E}(X) \ = \ \sum_{x\in A} x \, \mbox{Pr}(X = x) \]</p><p>Consider a few examples</p><h3>Biased coin</h3><p>We flip a coin one time, define \(X\) to be the random variable that is \(1\) if the outcome is heads, and \(0\) if it is tails. </p><p>Let \(p=P(X=1)\), \(1-p = P(X=0)\)</p><p>Complete the calculation of the expectation \(\mathbb{E}(X)\):</p><p>\[ \mathbb{E}(X) =0 \cdot \mbox{Pr}(X = 0) + 1 \cdot \mbox{Pr}(X = 1)  =0 \cdot (1-p) + 1 \cdot p =  \]</p>

    <customresponse cfn="check" expect="\[$solution1\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Another random variable on this space is \(X^2\), which also takes on values in \({0,1}\).</p><p>Notice that \(X^2 = X\), and in fact \(X^k = X\) for all \(k = 1,2,3,\ldots\)! </p><p>Recall that \(Var(X) = E(X^2) - E(X)^2\). Therefor, for a coin whose bias is \(p\), the variance is </p>

    <customresponse cfn="check" expect="\[$solution2\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<h3>Fair die</h3><p>Define \(X\) to be the outcome of the roll, so \(X \in {1,2,3,4,5,6}\). Then \(\mathbb{E}(X) = \)</p>

    <customresponse cfn="check" expect="\[$solution3\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>The Variance of \(X\) is</p>

    <customresponse cfn="check" expect="\[$solution4\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<h3>Two dice</h3><p>Suppose we roll the dice twice and let \(Y\) be the random variable corresponding tothe sum.</p><p>Recall that for <strong>any</strong> random variables \(X_1,X_2\), \(E(X_1+X_2) = E(X_1) + E(X_2)\). </p><p>Therefor \(\mathbb{E}(Y) = \)</p>

    <customresponse cfn="check" expect="\[$solution5\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Recall that for <strong>independent</strong> random variables \(X_1,X_2\), \(Var(X_1+X_2) = Var(X_1) + Var(X_2)\)</p><p>Therefor \(Var(Y)=\)</p>

    <customresponse cfn="check" expect="\[$solution6\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>



    
    

    

    <script type="loncapa/python">
from hint import evaluate
from hint.get_hint import get_hint_w_variables

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate_w_variables(expect, ans, variable_values)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return
  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  hint = get_hint_w_variables(solutions[i], ans, hint_text_id, i, variable_values)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript" src="/static/js/adaptive_hint.js"></script>
    <script type="text/javascript">                             
      for (var i=0; i != hint_number; i++) {
        hide_hint(i);
      }
      show_hint(hint_number);
    </script>

  </text>
</problem>