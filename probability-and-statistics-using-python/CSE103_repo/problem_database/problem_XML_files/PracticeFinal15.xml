<problem>
  <text>
    <script type="loncapa/python">
option1 = ('yes', 'no', 'can\'t tell')
solution1 = "no"
option2 = ('yes', 'no', 'can\'t tell')
solution2 = "yes"
option3 = ('yes', 'no', 'can\'t tell')
solution3 = "yes"
solutions=[solution1, solution2, solution3]


# hint text id
hint_text_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
      //fill in number of hint
        var hint_number = 2;

      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];

      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
               
      //fill in hint text id. Need to match the hint_text_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<p>In this problem, we consider a <em>paired t-test</em>. The setting is that two normal random variables (X) and (Y) are sampled. We pair each of the samples from the first variable with each of the samples from the second variable, and we check the "null hypothesis" that the two elements in each pair have the same mean, i.e. (\mu_X = \mu_Y), against the alternative hypothesis that (\mu_X \neq \mu_Y). Now create a new random variable (D) by taking the difference between the two elements in each pair. The <em>Null Hypothesis</em> is defined as (\mu_D = 0), and the alternative hypothesis (\mu_D \neq 0). Note that if the two variables are normally distributed, their difference (D) is also normally distributed. We then calculate the confidence interval for the mean of \(D\) .</p>
<ol>
<li>Suppose that for a given data set of \(D\), a 95% confidence interval is calculated to be (-3.45,1.78).  If you were to perform a hypothesis test at the 5% significance level to test the null hypothesis, would you reject it?  Answer "yes", "no", or "can't tell".</li>
</ol>


    <optionresponse>
      <optioninput options="('yes', 'no', 'can\'t tell')" correct="no"/>
  	</optionresponse>


<ol>
<li>Suppose that for a given data set of \(D\), a 99% confidence interval is calculated to be (-10.77,-2.35).  If you were to perform a hypothesis test at the 1% significance level to test the null hypothesis, would you reject it?  Answer "yes", "no", or "can't tell".</li>
</ol>


    <optionresponse>
      <optioninput options="('yes', 'no', 'can\'t tell')" correct="yes"/>
  	</optionresponse>


<ol>
<li>Suppose that for a given data set of \(D\), a 97% confidence interval is calculated to be (25.6,41.1).  If you were to perform a hypothesis test at the 3% significance level to test the null hypothesis, would you reject it?  Answer "yes", "no", or "can't tell".</li>
</ol>


    <optionresponse>
      <optioninput options="('yes', 'no', 'can\'t tell')" correct="yes"/>
  	</optionresponse>


    

    

    <script type="loncapa/python">
from hint import evaluate
from hint.get_hint import get_hint

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate(expect, ans)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return
  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  hint = get_hint(solutions[i], ans, hint_text_id, i)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript" src="/static/js/adaptive_hint.js"></script>
    <script type="text/javascript">                             
      for (var i=0; i != hint_number; i++) {
        hide_hint(i);
      }
      show_hint(hint_number);
    </script>

  </text>
</problem>