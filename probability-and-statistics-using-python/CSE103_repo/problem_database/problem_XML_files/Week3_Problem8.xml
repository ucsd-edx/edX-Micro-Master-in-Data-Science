<problem>
  <text>
    <script type="loncapa/python">

from math import sqrt
from math import exp
from math import factorial as f

def cnk(n, k):
    return int(f(n)/f(k)/f(n-k))

def pmt(n, k):
    return int(f(n)/f(n-k))
Tk = [1,2,3,2,5,7,9]
Tn = [3,3,3,10,10,10,10]
t = random.randrange(0,7,1)
n = Tn[t]
k = Tk[t]

R1=random.randrange(5,20,1)  # Number of balls (both white and black)
R2=random.randrange(2,R1-1,1)  # Number of white balls
R3=R1-R2 # Number of black balls

solution1 = "{0}!/({1}!*({0}-{1})!)".format(R1,R2)

solutions = [solution1]
# hint text id
hint_text_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
      //fill in number of hint
        var hint_number = 2;

      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];

      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
               
      //fill in hint text id. Need to match the hint_text_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<p>Snow White is off to pick strawberries and asks three of the dwarfs chosenfrom the set of size seven: \(\{Dopey, Grumpy, Doc, Happy, Bashful, Sneezy, Sleepy\}\) to joinher. How many possible groups are there?</p><p>In this case, it is misleading to represent an outcome as a 3-tuple,because, for instance, \((Dopey, Sleepy, Doc)\) is a different3-tuple from \((Sleepy, Dopey, Doc)\) but they represent thesame group. So if we count tuples, we would be<em>over-counting</em>. Instead, we ought to represent an outcome as a set,\(\{Dopey, Doc, Sleepy\}\)</p><p>So the question becomes: how many different subsets of three dwarfs are there?In general, a set of size \(n\) has</p><p>(A) \[{n \choose k} \ \doteq \ \frac{n!}{k! (n-k)!}\]</p><p>subsets of size \(k\).  So in our example, the answer is \({7 \choose 3} = 35\). Formula (A) is called the <em>Binomial formula</em> or the <em>Binomial coefficient</em>.</p><p>Let's step back and derive Formula (A): how many subsets of size \(k\)does a set of \(n\) elements have? We will use the followingstrategy. First, we will assume that the order of the elements in theset <em>does</em> matter. Then we will calculate the amount by which weover-counted and divide the first result by it.</p><ul><li>How many sequences of length \(k\) (where order does matter) can we choose from a set of \(n\) different elements? We already have the formula for this from the analysis of "sampling without replacement when the order matters" (remember the children choosing the dogs example...). So you surely remember that the formula is</li></ul><p>(B)  \[  \frac{n!}{(n-k)!} \]</p><ul><li>Ok, so now we have the number of sequences of length \(k\), but we want to count sets not sequences, in other words, order does not matter. By counting all sequences we have counted each set a number of times. Convince yourself that this number is the same for all sets of size \(k\). If we can calculate this number, we can divide formula (B) by it and get the correct number of sets. So, how many ways are there to order \(k\) elements? (hint, recall computing the number of ways to shuffle a deck of cards) it is:</li></ul><p>(C) \[k! \]</p><ul><li>Dividing (B) by (C) we get the Binomial Equation:</li></ul><p>(A) \[{n \choose k} \ \doteq \ \frac{n!}{k! (n-k)!} \]</p><p>EXAMPLE:</p><p>Binomials appear everywhere. here is another example: how many strings in \(\{0,1\}^{10}\) contain exactlyfour 1s?  Well, we need to choose four positions of the tenpossibilities in which to place the 1s; that is, we choose a subset ofsize four from \(\{1,2,\ldots,10\}\)   The number of ways to do this is \({10 \choose 4} = 210\)</p><p>PROBLEM:</p><p>Suppose we have $R1 bins, numbered 1,...,$R1 and that we have $R1 balls,$R2 of them white and $R3 of them black.</p><p>o How many white/black patterns can one make by placing the balls in the bins?</p>

    <customresponse cfn="check" expect="\[$solution1\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>



    
    

    

    <script type="loncapa/python">
from hint import evaluate
from hint.get_hint import get_hint

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate(expect, ans)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return
  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  hint = get_hint(solutions[i], ans, hint_text_id, i)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript" src="/static/js/adaptive_hint.js"></script>
    <script type="text/javascript">                             
      for (var i=0; i != hint_number; i++) {
        hide_hint(i);
      }
      show_hint(hint_number);
    </script>

  </text>
</problem>