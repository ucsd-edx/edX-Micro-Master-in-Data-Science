<problem>
  <text>
    <script type="loncapa/python">
k = random.randrange(8,15,1)
r = random.randrange(8,15,1)

while(k == r):
    k = random.randrange(8,15,1)
    r = random.randrange(8,15,1)    

solution1 = "C({0}+3,3)".format(k)
solution2 = "C({0}+3,3)".format(r)
solution3 = "C({0}+3,3) * C({1}+3,3)".format(k,r)
solution4 = "C({0},3)".format(k)
solution5 = "C({0},3)".format(r)
solution6 = "C({0},3) * C({1},3)".format(k,r)

solutions = [solution1, solution2, solution3, solution4, solution5, solution6]

# hint text id
hint_text_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
      //fill in number of hint
        var hint_number = 2;

      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];

      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
               
      //fill in hint text id. Need to match the hint_text_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<h4>Candice shares Candy with her Little Brothers</h4>
<p>After a (not very successful) trick or treating round, Candice has $k Tootsie rolls and $r Twizzlers in her pillow case. Her mother asks her to share the loot with her three younger brothers. (She can choose to keep some or none for herself, and can choose to give some or none to any of her brothers.)</p>
<p>o How many different ways can she do this?</p>
<p>First of all, let's find out how many ways can she share Tootsie rolls with her three brothers?</p>


    <customresponse cfn="check" expect="\[$solution1\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Then, let's find out how many ways can she share her Twizzlers?</p>


    <customresponse cfn="check" expect="\[$solution2\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Now, based on the previous two solutions, how many different ways can she share the loot with her brothers?</p>


    <customresponse cfn="check" expect="\[$solution3\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>How many different ways can she do this after her mother warns her to give at least one of each type of candies to each of her brothers?</p>
<p>Again, how many ways can she share Tootsie rolls when she has to give at least one Tootsie roll to each of her brothers?</p>


    <customresponse cfn="check" expect="\[$solution4\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>How many ways can she share her Twizzlers when she has to give at least one Twizzler to each of her brothers?</p>


    <customresponse cfn="check" expect="\[$solution5\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Now, based on the previous two solutions, how many different ways can she share the loot with her brothers after her mother warns her?</p>


    <customresponse cfn="check" expect="\[$solution6\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


    

    

    <script type="loncapa/python">
from hint import evaluate
from hint.get_hint import get_hint

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate(expect, ans)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return
  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  hint = get_hint(solutions[i], ans, hint_text_id, i)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript" src="/static/js/adaptive_hint.js"></script>
    <script type="text/javascript">                             
      for (var i=0; i != hint_number; i++) {
        hide_hint(i);
      }
      show_hint(hint_number);
    </script>

  </text>
</problem>