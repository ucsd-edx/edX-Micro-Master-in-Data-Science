```python
ns = random.randrange(4,6,1)
nr = random.randrange(10,16,1)
n = ns * nr

solution1 = "{0}".format(nr)
solution2 = "C({0},2)".format(ns)
solution3 = "C({0}-1,3)".format(nr)
solution4 = "{0}^{{3}}".format(ns) 
solution5 = "{0}*C({1},2)*C({0}-1,3)*({1}^{{3}})".format(nr,ns) 
solution6 = "{0}*C({1},2)*C({0}-1,3)*({1}^{{3}})/C({2},5)".format(nr,ns,n) 

solutions = [solution1,solution2,solution3,solution4,solution5,solution6]
```

######################################################################

Remember, the deck you are using has \$ns suits and \$nr ranks.


1. The number of possibilities for the ranks of the pair is 

[_]

2. The number of possibilities for the suits of the pair is 

[_]

3. The three other cards have three ranks different from the pair, the number of possibilities for their ranks is 

[_]

4. And they can be of any suit, thus the number of possibilities of their suites is 

[_]

5. Thus the number of hands with exactly one pair is 

[_]

6. The ratio of this number to the number of all hands 

[_]


