<problem>
  <text>
    <script type="loncapa/python">
showPartialCorrectAnswers = 1
n = random.randrange(50,100)
k = random.randrange(20,30)

option1 = ('-1','0','infinity')
option2 = ('-1','0','infinity')
option3 = ('-1','0','infinity')
option4 = ('-1','0','infinity')
option5 = ('-1','0','infinity')
option6 = ('-1','0','infinity')
option7 = ('-1','0','infinity')

solution1 = "-1"
solution2 = "infinity"
solution3 = "infinity"
solution4 = "0"
solution5 = "infinity"
solution6 = "infinity"
solution7 = "0"
solution8 = "1.645/1.082"
solution9 = "sqrt(1.645/1.082)"
solution10 = "0" 
solution11 = "{0}*1.645/1.082".format(n)
solution12 = "sqrt({0}*1.645/1.082)".format(n) 
solution13 = "{0}*1.645/1.082/{1}^2".format(n,k)

solutions = [solution1,solution2,solution3,solution4,solution5,solution6,solution7,solution8,solution9,solution10,solution11,solution12,solution13]

# hint text id
hint_text_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
      //fill in number of hint
        var hint_number = 2;

      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];

      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
               
      //fill in hint text id. Need to match the hint_text_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<h1>Useful Facts</h1>
<p>\[\sum_{i=1}^{\infty}{\frac{1}{i}} = \infty\]</p>
<p>Use the following approximations:</p>
<p>\[\sum_{i=1}^{\infty}{\frac{1}{i^2}} \approx 1.645\]</p>
<p>\[\sum_{i=1}^{\infty}{\frac{1}{i^3}} \approx 1.202\]</p>
<p>\[\sum_{i=1}^{\infty}{\frac{1}{i^4}} \approx 1.082\]</p>
<p>In WebWork, you can use inf in an answer box to denote infinity.
And use -1 to denote undefined.</p>
<h1>Properties of Random Variable X</h1>
<p>Let X be a random variable over the integers \(\mathbb{Z} = {...-2,-1,0,1,2,...}\).</p>
<p>Let \(P(X=0)=0\) and for \(i \neq 0\) let \(P(X=i) = \frac{1}{Z_{\alpha}|i|^\alpha}\) where \(Z_{\alpha} = \sum_{i=-\infty}^{\infty}{1/|i|^{\alpha}} \).  Note that \(Z_{\alpha}\) needs to be finite for this distribution to be well defined.</p>
<p>Notice, by having \(Z_{\alpha}\) in the denominator, we can ensure that \(P(X=i)\) is a probability distribution.  This is since \(\sum_{i=-\infty}^{\infty}{P(X=i)} = \frac{\sum_{i=-\infty}^{\infty}{1/|i|^{\alpha}}}{\sum_{i=-\infty}^{\infty}{1/|i|^{\alpha}}} = 1\)</p>
<p>For \(\alpha=2\):</p>
<p>What is \(E[X]\)?</p>


    <optionresponse>
      <optioninput options="('-1','0','infinity')" correct="-1"/>
  	</optionresponse>


<p>What is \(var[X]\)?</p>


    <optionresponse>
      <optioninput options="('-1','0','infinity')" correct="infinity"/>
  	</optionresponse>


<p>What is \(std[X]\)?</p>


    <optionresponse>
      <optioninput options="('-1','0','infinity')" correct="infinity"/>
  	</optionresponse>


<p>For \(\alpha=3\):</p>
<p>What is \(E[X]\)?</p>


    <optionresponse>
      <optioninput options="('-1','0','infinity')" correct="0"/>
  	</optionresponse>


<p>What is \(var[X]\)?</p>


    <optionresponse>
      <optioninput options="('-1','0','infinity')" correct="infinity"/>
  	</optionresponse>


<p>What is \(std[X]\)?</p>


    <optionresponse>
      <optioninput options="('-1','0','infinity')" correct="infinity"/>
  	</optionresponse>


<p>For \(\alpha=4\):</p>
<p>What is \(E[X]\)?</p>


    <optionresponse>
      <optioninput options="('-1','0','infinity')" correct="0"/>
  	</optionresponse>


<p>What is \(var[X]\)?</p>


    <customresponse cfn="check" expect="\[$solution8\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>What is \(std[X]\)?</p>


    <customresponse cfn="check" expect="\[$solution9\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Hint: To compute both the expected value and variances above, split the infinite
summation \(\sum_{i=-\infty}^{\infty}{...}\) into three parts:</p>
<p>\[\sum_{i=-\infty}^{-1}{...}\]</p>
<p>\[P(X=0)=0\]</p>
<p>\[\sum_{i=1}^{\infty}{...}\]</p>
<h1>Sums of iid samples from X</h1>
<p>For this part, let \(X\) be defined as above for \(\alpha=4\).</p>
<p>Define the random variable \(Y_{$n} = \sum_{i=1}^{$n}{X_i}\), \(X_i\) independent identically distributed according to \(X\).</p>
<p>Using linearity of expectation, what is \(E[Y_{$n}]\)?</p>


    <customresponse cfn="check" expect="\[$solution10\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Using the fact that the \(X_i\) random variables are independent and identically
distributed, what is \(var[Y_{$n}]\)?</p>


    <customresponse cfn="check" expect="\[$solution11\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>What about the the standard deviation \(std[Y_{$n}]\)?</p>


    <customresponse cfn="check" expect="\[$solution12\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>Using Chebyshev's inequality, what is a bound on the \(P(|Y_{$n}| &gt; $k)\)?</p>


    <customresponse cfn="check" expect="\[$solution13\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>RECALL:</p>
<p>Chebyshev's inequality states:</p>
<p>Let X be a random variable with finite expected value \(\mu\) and finite non-zero variance \(\sigma^2\). Then for any real number \($k &gt; 0\), \(\Pr(|X-\mu|\geq k\sigma) \leq \frac{1}{k^2}\), which is the same as \(\mathbb{P}(|X-\mathbb{E}(X)| \geq a) \leq \frac{\textrm{Var}(X)}{a^2}\) for any a&gt;0.</p>
    

    

    <script type="loncapa/python">
from hint import evaluate
from hint.get_hint import get_hint

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate(expect, ans)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return
  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  hint = get_hint(solutions[i], ans, hint_text_id, i)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript" src="/static/js/adaptive_hint.js"></script>
    <script type="text/javascript">                             
      for (var i=0; i != hint_number; i++) {
        hide_hint(i);
      }
      show_hint(hint_number);
    </script>

  </text>
</problem>